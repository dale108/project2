#BlueJ class context
comment0.target=IntTree
comment0.text=\n\ Dale\ Berg\n\ Homework\ 17\n\ 2/11/19\n\ \n\ Time\ Spent\:\ 2\ hours\n\ \n\ The\ overall\ class\ is\ transcribed\ from\ the\ textbook\ -\ my\ solutions\ are\ at\ the\ bottom\ of\ the\n\ IntTree\ class.\ I've\ included\ a\ seperate\ main\ class\ for\ convinience\ in\ testing.\n
comment1.params=max
comment1.target=IntTree(int)
comment10.params=root\ level
comment10.target=void\ printSideways(IntTree.IntTreeNode,\ int)
comment11.params=
comment11.target=int\ countBranches()
comment12.params=n
comment12.target=int\ countBranches(IntTree.IntTreeNode)
comment13.params=
comment13.target=int\ countLeftNodes()
comment14.params=n
comment14.target=int\ countLeftNodes(IntTree.IntTreeNode)
comment15.params=
comment15.target=boolean\ isFull()
comment16.params=n
comment16.target=boolean\ isFull(IntTree.IntTreeNode)
comment17.params=
comment17.target=IntTree\ copy()
comment17.text=\n\ I\ thought\ the\ smartest\ way\ to\ implement\ copy()\ was\ to\ leverage\ how\ the\ constructor\ works\n\ \ -\ taking\ a\ max\ value\ and\ builing\ a\ tree\ from\ that\ information.\ I\ built\ a\ getMax()\ method\n\ \ to\ facilitate\ this\ process\ and\ I\ left\ it\ public,\ because\ it\ makes\ sense\ as\ a\ method\ \n\ \ on\ its\ own.\n
comment18.params=
comment18.target=int\ maxValue()
comment19.params=n
comment19.target=int\ maxValue(IntTree.IntTreeNode)
comment2.params=n\ max
comment2.target=IntTree.IntTreeNode\ buildTree(int,\ int)
comment20.params=
comment20.target=java.util.ArrayList\ inOrderList()
comment21.params=n\ list
comment21.target=java.util.ArrayList\ inOrderList(IntTree.IntTreeNode,\ java.util.ArrayList)
comment3.params=
comment3.target=void\ printPreorder()
comment4.params=root
comment4.target=void\ printPreorder(IntTree.IntTreeNode)
comment5.params=
comment5.target=void\ printInorder()
comment6.params=root
comment6.target=void\ printInorder(IntTree.IntTreeNode)
comment7.params=
comment7.target=void\ printPostorder()
comment8.params=root
comment8.target=void\ printPostorder(IntTree.IntTreeNode)
comment9.params=
comment9.target=void\ printSideways()
numComments=22
